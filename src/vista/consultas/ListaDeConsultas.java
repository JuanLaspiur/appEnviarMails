/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista.consultas;

import controlador.ConsultaData;
import controlador.ReclutadorData;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Consulta;
import modelo.Reclutador;

/**
 *
 * @author jlasp
 */
public class ListaDeConsultas extends javax.swing.JInternalFrame {
    DefaultTableModel model = new DefaultTableModel(){
    
     
    @Override
    public boolean isCellEditable(int f, int c){
        return false;
    }
    };
    
    public ListaDeConsultas() {
        initComponents();
        tabla.setModel(model);
        agregarCabecera();
        cargarTabla(ConsultaData.listaDeConsulta());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        botonEliminar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setClosable(true);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Lista de Consultas Realizadas");

        botonEliminar.setText("Eliminar");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        jButton2.setText("Editar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(botonEliminar))))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jButton2)
                        .addGap(29, 29, 29)
                        .addComponent(botonEliminar)
                        .addGap(189, 189, 189))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        int row = tabla.getSelectedRow();
        if (row > 0) {
            int id = (int) model.getValueAt(row, 0);
            int opcion = JOptionPane.showConfirmDialog(null, "¿Quieres continuar?", "Confirmación", JOptionPane.YES_NO_OPTION);

            if (opcion == JOptionPane.YES_OPTION) {
                ConsultaData.eliminarConsulta(id);
                 vaciarTabla();
                 cargarTabla(ConsultaData.listaDeConsulta());

        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar una fila de la tabla para eliminar");
        }
        }
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int row = tabla.getSelectedRow();
        if (row > 0) {
            JDesktopPane desktop = getDesktopPane();
            desktop.removeAll();
            desktop.repaint();
            int id = (int) model.getValueAt(row, 0);
            EditarConsulta pagina1 = new EditarConsulta(ConsultaData.consulta(id));
            pagina1.setVisible(true);
            desktop.add(pagina1);
            desktop.moveToFront(pagina1);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar una fila de la tabla para editar");
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables

//    private int id;
//    private Reclutador reclutador;
//    private Date fecha;
//    private String mensaje;
//    
    private void agregarCabecera() {
        model.addColumn("id");
        model.addColumn("Reclutador");
        model.addColumn("Fecha");
        model.addColumn("Mensaje");
        
    }

    public void agregarFilaTabla(Consulta consulta){
         model.addRow(new Object[]{consulta.getId(),consulta.getReclutador().getNombre(), consulta.getFecha(), consulta.getMensaje()});
    }
    
    public void cargarTabla(ArrayList<Consulta> lista){
        for (Consulta consulta : lista) {
            agregarFilaTabla(consulta);
        }
    }

    public void vaciarTabla() {
        int cantidadFilas = model.getRowCount();
        for (int i = cantidadFilas - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }
    
}
